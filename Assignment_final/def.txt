char keepwords[165][10] = {"abort", "abs", "acos", "asctime", "asin", "assert", "atan", "atan2", "atexit", "atof", "atoi", "atol", "auto", "break", "bsearch", "calloc", "case", "ceil", "char", "clearerr", "clock", "const", "continue", "cos", "cosh", "ctime", "default", "difftime", "div", "do", "double", "else", "enum", "exit", "exp", "extern", "fabs", "fclose", "feof", "ferror", "fflush", "fgetc", "fgetpos", "fgets", "float", "floor", "fmod", "fopen", "for", "fprintf", "fputc", "fputs", "fread", "free", "freopen", "frexp", "fscanf", "fseek", "fsetpos", "ftell", "fwrite", "getc", "getchar", "getenv", "gets", "gmtime", "goto", "if", "int", "isalnum", "isalpha", "iscntrl", "isdigit", "isgraph", "islower", "isprint", "ispunct", "isspace", "isupper", "isxdigit", "labs", "ldexp", "ldiv", "localtime", "log", "log10", "long", "longjmp", "malloc", "memchr", "memcmp", "memcpy", "memmove", "memset", "mktime", "modf", "perror", "pow", "printf", "putc", "putchar", "puts", "qsort", "raise", "rand", "realloc", "register", "remove", "rename", "return", "rewind", "scanf", "setbuf", "setjmp", "setvbuf", "short", "signal", "signed", "sin", "sinh", "sizeof", "sprintf", "sqrt", "srand", "sscanf", "static", "strapn", "strcapn", "strcat", "strchr", "strcmp", "strcpy", "strerror", "strftime", "strlen", "strncat", "strncmp", "strncpy", "strpbrk", "strrchr", "strstr", "strtod", "strtok", "strtol", "strtoul", "struct", "switch", "system", "tan", "tanh", "time", "tmpfile", "tmpnam", "tolower", "toupper", "typedef", "ungetc", "union", "unsigned", "va_arg", "va_end", "va_start", "void", "volatile", "while"};
int search_from[26] = {0, 13, 15, 26, 31, 36, 61, 67, 67, 80, 80, 80, 88, 96, 96, 96, 102, 103, 111, 148, 156, 159, 164, 165, 165, 165};
用法：str
if(str[0] < 'a' || str[0] >'w')
    return FALSE;
int a = search_from[str[0] - 'a'], b = search_from[str[0] - 'a' + 1];
return search_between(a, b, str);

search_between(int a, int b, char *str)
{
    if(a + 1 == b)
    {
        return strcmp(str, keepwords[a]) == 0;
    }
    int p = (a + b) / 2;
    int ans = strcmp(str, keepwords[p]);
    if(ans == 0)
        return TRUE;
    if(ans > 0)
        return search_between(p, b, str);
    else
        return search_between(a, p, str);
}